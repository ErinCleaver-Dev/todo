{"version":3,"sources":["logo.svg","actions/Actions.js","components/styles/style.js","components/links/Link.js","components/links/FilterLinks.js","components/links/Footer.js","actions/actions.js","components/todos/AddTodo.js","components/todos/Todo.js","components/todos/TodoList.js","components/todos/VisibleTodoList.js","App.js","reportWebVitals.js","reducer/todos.js","reducer/visibilityFilter.js","reducer/combineReducers.js","index.js"],"names":["VisibilityFilters","Button","styled","button","StyledInput","input","MainContainer","div","Item","List","Link","active","children","onClick","disabled","style","margin","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLinks","nextTodoId","onSubmit","e","text","preventDefault","value","trim","id","console","log","ref","node","Todo","completed","backgroundColor","TodoList","todos","toggleTodo","map","todo","ropTypes","PropTypes","arrayOf","shape","number","isRequired","bool","string","func","getVisibleTodos","t","App","VisibleTodoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f81f988.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","let nextTodoId = 0;\r\n\r\nexport const addTodo = text => ({\r\n    type: 'ADD_TODO',\r\n    id: nextTodoId++,\r\n    text\r\n});\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n    type: 'SET_VISIBILITY_FILTER',\r\n    filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n    type: 'TOGGLE_TODO',\r\n    id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n    background-color: #3492b1;\r\n    padding: 5px;\r\n    margin-left: 10px;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    :focus {\r\n        background-color: #63708c;\r\n    }\r\n    :hover {\r\n        background-color: #63708c;\r\n    }\r\n    :disabled {\r\n        background-color: rgb(83 109 117);\r\n        border: #63708c;\r\n    }\r\n\r\n`\r\n\r\nexport const StyledInput = styled.input`\r\n    padding: 5px;\r\n    border: 3px solid #63708c;\r\n    border-radius: 5px;\r\n    outline: none;\r\n`\r\n\r\nexport const MainContainer = styled.div`\r\n    background-color: #5d8d9c;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 10px;\r\n    margin: 0 auto;\r\n    color: white;\r\n    font-size: 1.4em;\r\n`\r\n\r\nexport const Item = styled.div`\r\n    cursor: pointer;\r\n    border: 2px solid #416875;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    min-width: 450px;\r\n    flex: 1\r\n`\r\n\r\nexport const List = styled.div`\r\n    width: 70%;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {Button} from '../styles/style'\r\n\r\nconst Link = ({active, children, onClick}) => (\r\n    <Button \r\n        onClick={onClick}\r\n        disabled={active}\r\n        style={{\r\n            margin: '4px',\r\n        }}\r\n    >\r\n        {children}\r\n    </Button>\r\n\r\n)\r\n\r\nLink.propTypes = {\r\n    active: PropTypes.bool.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Link","import {connect} from 'react-redux';\r\nimport {setVisibilityFilter} from '../../actions/Actions'\r\nimport Link from './Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onClick: () =>dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Link)","import React from 'react';\r\nimport FilterLinks from \"./FilterLinks\"\r\nimport {VisibilityFilters} from \"../../actions/Actions\"\r\n\r\nconst Footer = () => (\r\n    <div>\r\n        <span>Show: </span>\r\n        <FilterLinks filter={VisibilityFilters.SHOW_ALL}>\r\n            All\r\n        </FilterLinks>\r\n        <FilterLinks filter={VisibilityFilters.SHOW_ACTIVE}>\r\n            Active\r\n        </FilterLinks>\r\n        <FilterLinks filter={VisibilityFilters.SHOW_COMPLETED}>\r\n            Completed\r\n        </FilterLinks>\r\n    </div>\r\n)\r\n\r\nexport default Footer","let nextTodoId = 0;\r\n\r\nexport const addTodo = text => ({\r\n    type: 'ADD_TODO',\r\n    id: nextTodoId++,\r\n    text\r\n});\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n    type: 'SET_VISIBILITY_FILTER',\r\n    filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n    type: 'TOGGLE_TODO',\r\n    id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import {connect} from 'react-redux';\r\nimport {addTodo} from '../../actions/actions'\r\nimport {Button, StyledInput} from '../styles/style'\r\n\r\nconst AddTodo = ({dispatch}) => {\r\n    let input \r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={e=> {\r\n                e.preventDefault();\r\n                if(!input.value.trim())  {\r\n                    console.log(\"testing if null\")\r\n                    return;\r\n                }\r\n                dispatch(addTodo(input.value));\r\n                input.value = '';\r\n            }}>\r\n                <StyledInput ref={node => input = node} />\r\n                <Button type=\"submit\">\r\n                    Add Todo\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect () (AddTodo)","import PropTypes from 'prop-types';\r\nimport {Item} from '../styles/style'\r\n\r\n\r\nconst Todo = ({ onClick, completed, text}) => (\r\n    <Item \r\n    onClick={onClick}\r\n    style={\r\n        {backgroundColor: completed ? \r\n            '#76b9ce' : '#416875'}\r\n    }\r\n    >{text} \r\n    </Item>\r\n)\r\n\r\nTodo.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Todo","import PropTypes from 'prop-types';\r\nimport Todo from './Todo'\r\nimport {List} from '../styles/style'\r\n\r\n\r\nconst TodoList = ({todos, toggleTodo}) => (\r\n    <List>\r\n        { todos.map (todo =>\r\n            \r\n            <Todo \r\n            key={todo.id}\r\n            {...todo}\r\n            \r\n            onClick={() => toggleTodo(todo.id)}\r\n            />\r\n            )\r\n\r\n        }\r\n    </List>\r\n)\r\n\r\nTodoList.ropTypes = {\r\n    todos: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n           id: PropTypes.number.isRequired,\r\n           completed: PropTypes.bool.isRequired,\r\n           text: PropTypes.string.isRequired,\r\n        }).isRequired\r\n    ).isRequired,\r\n    toggleTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoList","import { connect } from 'react-redux';\r\nimport {toggleTodo } from '../../actions/actions';\r\nimport TodoList from './TodoList';\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n    switch (filter) {\r\n        case 'SHOW_COMPLETED':\r\n            return todos.filter(t => t.completed)\r\n        case 'SHOW_ACTIVE':\r\n            return todos.filter(t => !t.completed)\r\n        case \"SHOW_ALL\":\r\n        default:\r\n            return todos\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n) (TodoList)\r\n\r\n\r\n","import logo from './logo.svg';\nimport Footer from './components/links/Footer'\nimport AddTodo from './components/todos/AddTodo'\nimport VisibleTodoList from './components/todos/VisibleTodoList'\nimport {MainContainer} from './components/styles/style'\n\nfunction App() {\n  return (\n    <MainContainer>\n      <AddTodo />\n      <VisibleTodoList/>\n      <Footer />\n    </MainContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const todos = (state = [], action) => {\r\n\r\n    switch(action.type) {\r\n        case 'ADD_TODO':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed: false,\r\n                }\r\n            ]\r\n        case 'TOGGLE_TODO':\r\n            return state.map(todo =>\r\n                (todo.id === action.id)\r\n                    ? {...todo, completed: !todo.completed} \r\n                    : todo\r\n                )\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default todos;","const visibilityFilter= \r\n    (state = 'SHOW_ALL', action) => {\r\n        switch (action.type) {\r\n            case 'SET_VISIBILITY_FILTER':\r\n                return action.filter\r\n            default:\r\n                return state;\r\n        }\r\n\r\n}\r\n\r\n\r\nexport default visibilityFilter","import {combineReducers} from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers ({\r\n    todos,\r\n    visibilityFilter\r\n});\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport combineReducers from './reducer/combineReducers'\n\nconst store = createStore(combineReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}